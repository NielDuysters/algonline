extends panel

block head2
    link(href="/javascripts/codemirror/codemirror.css", rel="stylesheet")
    link(href="/stylesheets/panel/add-algorithm.css", rel="stylesheet")
    link(href="/stylesheets/panel/add-algorithm.css", rel="stylesheet")

    script(src="/javascripts/codemirror/codemirror.js", defer)
    script(src="/javascripts/codemirror/python-mode.js", defer)
    script(src="/javascripts/panel/add-algorithm.js", defer)

block panel
    h1 Add algorithm

    p Write your own trading algorithm in a Python script to add it to the system. Track the performance of your algorithm after adding

    form(method="POST", action="/panel/algorithms/add")
        .input-wrapper
            span
                | ID
                img(src="/images/panel/help.png", class="text-popup-button", data-text="Choose a short and unique ID. E.g: algorithm-1")
            input(type="text", name="id", placeholder="simple-algorithm")
        
        .input-wrapper
            span Short description
            input(type="text", name="description", placeholder="Short description...")
        
        .input-wrapper
            span 
                | Amount USDT
                img(src="/images/panel/help.png", class="text-popup-button", data-text="The amount of USDT this algorithm can use.")
            input(type="number", name="start_funds", step="0.01", placeholder="25.00", value="100.00")
        
        .input-wrapper
            span 
                | Initial BTC order (in USDT)
                img(src="/images/panel/help.png", class="text-popup-button", data-text="The initial amount of BTC the algorithm will purchase once after creation.")
            input(type="number", name="first_btc_order", step="0.01", placeholder="5.00", value="20.00")
        
        .input-wrapper
            span 
                | Candlestick interval
                img(src="/images/panel/help.png", class="text-popup-button", data-text="Interval of the candlestick.")
            select(name="interval", value="1s")
                option(value="1s") 1s
                option(value="1m") 1m
                option(value="5m") 5m
                option(value="15m") 15m
                option(value="30m") 30m
                option(value="1h") 1h
                option(value="2h") 2h
                option(value="12h") 12h
                option(value="1d") 1d
                option(value="3d") 3d
        
        .input-wrapper
            span 
                | Prepend data
                img(src="/images/panel/help.png", class="text-popup-button", data-text="Prepend historical data each time the algorithm starts.")
            select(name="prepend_data", value="0")
                option(value="0") None
                option(value="30m") 30m
                option(value="1h") 1h
                option(value="1d") 1d
                option(value="1w") 1w
                option(value="30d") 30d
        
        .input-wrapper
            span 
                | Execute every sec
                img(src="/images/panel/help.png", class="text-popup-button", data-text="By default the algorithm is executed approx. every 2 secs. Value must be bigger then 5.")
            input(type="number", name="run_every_sec", placeholder="2", value="2")

        span Python code
        textarea(id="code_input", name="code")

        input(type="submit", value="Add")

        if error
            .form-error
                span #{error}

